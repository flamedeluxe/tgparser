<?php

require_once 'vendor/autoload.php';

use Longman\TelegramBot\Telegram;
use Longman\TelegramBot\Request;
use Longman\TelegramBot\Entities\Update;
use Longman\TelegramBot\Exception\TelegramException;
use TgParser\Database;

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
$dotenv = Dotenv\Dotenv::createImmutable(__DIR__);
$dotenv->load();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
$database = new Database();

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
$bot_token = $_ENV['BOT_TOKEN'] ?? '7871178627:AAFY2IYhkaf0GdlDBRC8Tvg26SXRMMVvwi0';
$bot_username = $_ENV['BOT_USERNAME'] ?? 'tgparser2_bot';

try {
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
    $telegram = new Telegram($bot_token, $bot_username);
    
    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    $updates = $telegram->handleGetUpdates();
    
    if (empty($updates) || !is_array($updates)) {
        echo "–ù–µ—Ç –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.\n";
        exit;
    }
    
    foreach ($updates as $update) {
        if ($update instanceof Update) {
            handleUpdate($update, $telegram);
        }
    }
    
} catch (TelegramException $e) {
    echo "–û—à–∏–±–∫–∞ Telegram: " . $e->getMessage() . "\n";
} catch (Exception $e) {
    echo "–û–±—â–∞—è –æ—à–∏–±–∫–∞: " . $e->getMessage() . "\n";
}

/**
 * –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞ –ø–æ file_id
 */
function downloadMediaFile($telegram, $fileId, $mediaType, $chatId, $messageId)
{
    try {
        // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
        $mediaDir = __DIR__ . '/media';
        if (!is_dir($mediaDir)) {
            mkdir($mediaDir, 0755, true);
        }

        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
        $file = Request::getFile(['file_id' => $fileId]);
        
        if (!$file->isOk()) {
            error_log("Failed to get file info for file_id: {$fileId}");
            return null;
        }

        $fileData = $file->getResult();
        $filePath = $fileData->getFilePath();
        
        if (!$filePath) {
            error_log("No file path received for file_id: {$fileId}");
            return null;
        }

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
        $extension = pathinfo($filePath, PATHINFO_EXTENSION);
        if (empty($extension)) {
            // –î–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –º–µ–¥–∏–∞ –∑–∞–¥–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            switch ($mediaType) {
                case 'photo':
                    $extension = 'jpg';
                    break;
                case 'video':
                    $extension = 'mp4';
                    break;
                case 'audio':
                    $extension = 'mp3';
                    break;
                case 'voice':
                    $extension = 'ogg';
                    break;
                case 'sticker':
                    $extension = 'webp';
                    break;
                default:
                    $extension = 'bin';
            }
        }

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞
        $fileName = "{$mediaType}_{$chatId}_{$messageId}_" . substr($fileId, -10) . ".{$extension}";
        $localPath = $mediaDir . '/' . $fileName;

        // –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        $botToken = $_ENV['BOT_TOKEN'] ?? '7871178627:AAFY2IYhkaf0GdlDBRC8Tvg26SXRMMVvwi0';
        $downloadUrl = "https://api.telegram.org/file/bot{$botToken}/{$filePath}";
        
        $fileContent = file_get_contents($downloadUrl);
        if ($fileContent === false) {
            error_log("Failed to download file from: {$downloadUrl}");
            return null;
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        if (file_put_contents($localPath, $fileContent) === false) {
            error_log("Failed to save file to: {$localPath}");
            return null;
        }

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å
        return 'media/' . $fileName;

    } catch (Exception $e) {
        error_log("Error downloading media file: " . $e->getMessage());
        return null;
    }
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
 */
function handleUpdate(Update $update, Telegram $telegram) {
    $message = $update->getMessage();
    
    if (!$message) {
        return;
    }
    
    $chat_id = $message->getChat()->getId();
    $text = $message->getText();
    $chat_type = $message->getChat()->getType();
    
    // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
    echo "–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ {$chat_id} (—Ç–∏–ø: {$chat_type}): {$text}\n";
    
    // –ï—Å–ª–∏ —ç—Ç–æ –∫–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø–∞, –ø–∞—Ä—Å–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç
    if (in_array($chat_type, ['channel', 'group', 'supergroup'])) {
        parseChannelContent($message, $telegram, $database);
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
    if ($text && strpos($text, '/') === 0) {
        handleCommand($text, $chat_id, $telegram, $database);
    }
}

/**
 * –ü–∞—Ä—Å–∏–Ω–≥ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∫–∞–Ω–∞–ª–∞
 */
function parseChannelContent($message, Telegram $telegram, Database $database) {
    $chat_id = $message->getChat()->getId();
    $message_id = $message->getMessageId();
    $text = $message->getText();
    $caption = $message->getCaption();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
    $chat_title = $message->getChat()->getTitle();
    $chat_type = $message->getChat()->getType();
    $database->saveChannel($chat_id, $chat_title, $chat_type);
    
    // –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏
    $content = [
        'message_id' => $message_id,
        'chat_id' => $chat_id,
        'from_user' => $message->getFrom() ? $message->getFrom()->getUsername() : 'Unknown',
        'text_content' => $text,
        'caption' => $caption,
        'message_date' => $message->getDate(),
    ];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ–¥–∏–∞ –∏ —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã
    if ($message->getPhoto()) {
        $content['media_type'] = 'photo';
        $photos = $message->getPhoto();
        $fileId = end($photos)->getFileId();
        $content['media_file_id'] = $fileId;
        
        // –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        $filePath = downloadMediaFile($telegram, $fileId, 'photo', $chat_id, $message_id);
        if ($filePath) {
            $content['media_file_path'] = $filePath;
        }
    } elseif ($message->getVideo()) {
        $content['media_type'] = 'video';
        $fileId = $message->getVideo()->getFileId();
        $content['media_file_id'] = $fileId;
        
        // –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        $filePath = downloadMediaFile($telegram, $fileId, 'video', $chat_id, $message_id);
        if ($filePath) {
            $content['media_file_path'] = $filePath;
        }
    } elseif ($message->getDocument()) {
        $content['media_type'] = 'document';
        $fileId = $message->getDocument()->getFileId();
        $content['media_file_id'] = $fileId;
        
        // –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        $filePath = downloadMediaFile($telegram, $fileId, 'document', $chat_id, $message_id);
        if ($filePath) {
            $content['media_file_path'] = $filePath;
        }
    } elseif ($message->getAudio()) {
        $content['media_type'] = 'audio';
        $fileId = $message->getAudio()->getFileId();
        $content['media_file_id'] = $fileId;
        
        // –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        $filePath = downloadMediaFile($telegram, $fileId, 'audio', $chat_id, $message_id);
        if ($filePath) {
            $content['media_file_path'] = $filePath;
        }
    } elseif ($message->getVoice()) {
        $content['media_type'] = 'voice';
        $fileId = $message->getVoice()->getFileId();
        $content['media_file_id'] = $fileId;
        
        // –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        $filePath = downloadMediaFile($telegram, $fileId, 'voice', $chat_id, $message_id);
        if ($filePath) {
            $content['media_file_path'] = $filePath;
        }
    } elseif ($message->getSticker()) {
        $content['media_type'] = 'sticker';
        $fileId = $message->getSticker()->getFileId();
        $content['media_file_id'] = $fileId;
        
        // –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        $filePath = downloadMediaFile($telegram, $fileId, 'sticker', $chat_id, $message_id);
        if ($filePath) {
            $content['media_file_path'] = $filePath;
        }
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    $database->saveMessage($content);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ (—Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è)
    if ($message->getChat()->getType() === 'private') {
        $response_text = "‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–ø–∞—Ä—Å–µ–Ω!\n\n";
        $response_text .= "üìù –¢–µ–∫—Å—Ç: " . ($text ?: $caption ?: '–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞') . "\n";
        $response_text .= "üìÖ –î–∞—Ç–∞: " . date('Y-m-d H:i:s', $content['message_date']) . "\n";
        $response_text .= "üì∫ –ö–∞–Ω–∞–ª: " . $chat_title . "\n";
        
        if (isset($content['media_type'])) {
            $response_text .= "üé¨ –ú–µ–¥–∏–∞: " . $content['media_type'] . "\n";
        }
        
        Request::sendMessage([
            'chat_id' => $message->getFrom()->getId(),
            'text' => $response_text,
        ]);
    }
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
 */
function handleCommand($text, $chat_id, Telegram $telegram, Database $database) {
    $command = explode(' ', $text)[0];
    
    switch ($command) {
        case '/start':
            $response = "ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–∑ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–æ–≤.\n\n";
            $response .= "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n";
            $response .= "/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n";
            $response .= "/status - –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞\n";
            $response .= "/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞\n\n";
            $response .= "–î–æ–±–∞–≤—å—Ç–µ –º–µ–Ω—è –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –∏ —è –±—É–¥—É –ø–∞—Ä—Å–∏—Ç—å –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç!";
            break;
            
        case '/help':
            $response = "üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É:\n\n";
            $response .= "üîß –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n";
            $response .= "1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n";
            $response .= "2. –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—á–Ω–µ—Ç –ø–∞—Ä—Å–∏—Ç—å –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç\n";
            $response .= "3. –ü–∞—Ä—Å–∏–Ω–≥ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏\n\n";
            $response .= "üìä –ß—Ç–æ –ø–∞—Ä—Å–∏—Ç—Å—è:\n";
            $response .= "‚Ä¢ –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n";
            $response .= "‚Ä¢ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –≤–∏–¥–µ–æ\n";
            $response .= "‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç—ã –∏ –∞—É–¥–∏–æ\n";
            $response .= "‚Ä¢ –°—Ç–∏–∫–µ—Ä—ã –∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n";
            break;
            
        case '/status':
            $response = "üü¢ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ!\n";
            $response .= "‚è∞ –í—Ä–µ–º—è: " . date('Y-m-d H:i:s') . "\n";
            $response .= "üÜî ID —á–∞—Ç–∞: " . $chat_id . "\n";
            break;
            
        case '/stats':
            $stats = $database->getStats();
            $response = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞:\n\n";
            $response .= "üìù –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: " . $stats['total_messages'] . "\n";
            $response .= "üì∫ –ö–∞–Ω–∞–ª–æ–≤: " . $stats['total_channels'] . "\n";
            $response .= "üïê –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–∞—Ä—Å–∏–Ω–≥: " . $stats['last_parsing'] . "\n";
            break;
            
        case '/channels':
            $channels = $database->getChannels();
            $response = "üì∫ –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤:\n\n";
            foreach ($channels as $channel) {
                $response .= "‚Ä¢ " . $channel['chat_title'] . " (ID: " . $channel['chat_id'] . ")\n";
            }
            break;
            
        case '/search':
            $query = trim(str_replace('/search', '', $text));
            if (empty($query)) {
                $response = "‚ùì –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /search <–∑–∞–ø—Ä–æ—Å>\n–ü—Ä–∏–º–µ—Ä: /search –ø—Ä–∏–≤–µ—Ç";
            } else {
                $messages = $database->searchMessages($query, 10);
                $response = "üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É '{$query}':\n\n";
                foreach ($messages as $msg) {
                    $response .= "üìù " . substr($msg['text_content'] ?: $msg['caption'] ?: '–ú–µ–¥–∏–∞', 0, 100) . "...\n";
                    $response .= "üì∫ " . $msg['chat_title'] . "\n\n";
                }
            }
            break;
            
        default:
            $response = "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.";
    }
    
    Request::sendMessage([
        'chat_id' => $chat_id,
        'text' => $response,
    ]);
}


// –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (php_sapi_name() === 'cli') {
    echo "ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...\n";
    echo "üÜî –ë–æ—Ç: @{$bot_username}\n";
    echo "üîë –¢–æ–∫–µ–Ω: " . substr($bot_token, 0, 10) . "...\n\n";
}
